# -*- coding: utf-8 -*-
"""Copy of NLP sample.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eVp9XgyYmwuBvPn-gJd9PF_H6ijdvoEW
"""

# Importing all the required modules

import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

import urllib.response
#from urllib.request import Request,urlopen
from bs4 import BeautifulSoup



website = 'https://en.wikipedia.org/wiki/SpaceX'

#website = 'https://en.wikipedia.org/wiki/Uri:_The_Surgical_Strike'

# Grab a webpage and analyze the text to see what the page is about.
# urllib module will help us to crawl the webpage

response =  urllib.request.urlopen(website)

html = response.read()

# Display content


# Use Beautiful Soup which is a Python library for pulling data out of HTML and XML files. 
# Use beautiful soup to clean our webpage text of HTML tags.

soup = BeautifulSoup(html,'html5lib')
text = soup.get_text(strip = True)
#soup.find_all('p')
for paragraph in soup.find_all('p'):
    #print(paragraph.string)
    print(str(paragraph.text))
    
#text = str(paragraph.text)

# Display cleaned text

#text

# Convert the text into tokens.

tokens = [t for t in text.split()]

# Display tokens

print(tokens)



"""# POS Tagging

The primary target of Part-of-Speech(POS) tagging is to identify the grammatical group of a given word. Whether it is a NOUN, PRONOUN, ADJECTIVE, VERB, ADVERBS, etc. based on the context. POS Tagging looks for relationships within the sentence and assigns a corresponding tag to the word.
"""

nltk.download('averaged_perceptron_tagger')
nltk.pos_tag(tokens)

# Count word frequency

sr= stopwords.words('english')
clean_tokens = tokens[:]
for token in tokens:
    if token in stopwords.words('english'):
        
        clean_tokens.remove(token)                                               # Removes stopwords such as - a,an,be to avoid hindering the word count
freq = nltk.FreqDist(clean_tokens)
for key,val in freq.items():
    print(str(key) + ':' + str(val))

# Display a plot of the word frequency

freq.plot(5, cumulative=False)







































